services:
  db:
    container_name: postgres-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${CITY_API_DB_PWD:?error}
      - POSTGRES_USER=${CITY_API_DB_USER?:error}
      - POSTGRES_DB=city_api
    ports:
      - ${CITY_API_DB_PORT?:error}:${CITY_API_DB_PORT?:error}
    volumes:
      - /var/lib/postgres
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_city.sql
      - ./db/populate.sql:/docker-entrypoint-initdb.d/populate_city.sql
    command: -p ${CITY_API_DB_PORT?:error}
  python:
    container_name: flask-app
    build:
      context: .
      dockerfile: python.dockerfile
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - ${CITY_API_PORT:?error}:${CITY_API_PORT:?error}
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./metrics/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    ports:
      - ${PROMETHEUS_PORT:?error}:9090
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./metrics/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./metrics/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./metrics/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
    ports:
      - ${GRAFANA_PORT:?error}:3000
volumes:
  prometheus: